1. 프로젝트 디렉토리 구조 설정
리액트 프로젝트의 루트 디렉토리 (C:\Docker server\portfolio-a)에 Dockerfile과 필요한 파일을 추가합니다.

arduino
코드 복사
C:\Docker server\portfolio-a\
├── build/
│   ├── index.html
│   ├── static/
│   └── ...
├── Dockerfile
└── apache-config/
    └── httpd.conf (옵션)
2. 리액트 애플리케이션 빌드
먼저, 리액트 애플리케이션을 빌드합니다. 터미널에서 리액트 프로젝트 루트 디렉토리로 이동하고 빌드 명령을 실행합니다:

bash
코드 복사
cd "C:\Docker server\portfolio-a"
npm install
npm run build
이 명령은 build/ 디렉토리에 정적 파일을 생성합니다.

3. Dockerfile 작성
리액트 프로젝트 루트 디렉토리에 Dockerfile을 생성하고 아래 내용을 추가합니다:

dockerfile
코드 복사
# Apache 베이스 이미지 설정
FROM httpd:2.4

# 빌드된 리액트 애플리케이션 정적 파일을 Apache 웹 루트로 복사
COPY build/ /usr/local/apache2/htdocs/

# (옵션) 커스텀 Apache 설정 파일 복사
# COPY apache-config/httpd.conf /usr/local/apache2/conf/httpd.conf

# Apache 포트 노출
EXPOSE 80

# Apache 서버 시작
CMD ["httpd-foreground"]
4. (옵션) Apache 설정 파일 작성
기본 설정을 사용하지 않으려면 apache-config/httpd.conf 파일을 작성하여 Apache 설정을 커스터마이즈할 수 있습니다. 예시는 다음과 같습니다:

apache
코드 복사
ServerRoot "/usr/local/apache2"
Listen 80
Include conf.modules.d/*.conf
User daemon
Group daemon
ServerAdmin you@example.com
ServerName localhost:80
DocumentRoot "/usr/local/apache2/htdocs"
<Directory />
    AllowOverride none
    Require all denied
</Directory>
<Directory "/usr/local/apache2/htdocs">
    Options Indexes FollowSymLinks
    AllowOverride None
    Require all granted
</Directory>
이 설정 파일을 사용하려면 위 Dockerfile의 주석 처리된 COPY 명령을 활성화합니다.

5. Docker 이미지 빌드
Dockerfile이 있는 디렉토리로 이동한 후 Docker 이미지를 빌드합니다:

bash
코드 복사
docker build -t my-react-apache-app .
6. Docker 컨테이너 실행
이미지를 빌드한 후 Docker 컨테이너를 실행합니다:

bash
코드 복사
docker run -p 80:80 my-react-apache-app
이 명령은 로컬 머신의 포트 80을 Docker 컨테이너의 포트 80에 매핑합니다. 이제 브라우저에서 http://localhost로 접속하여 애플리케이션을 확인할 수 있습니다.

7. Docker Compose (옵션)
Docker Compose를 사용하여 더 복잡한 설정을 관리할 수 있습니다. 예를 들어, docker-compose.yml 파일을 사용하여 서비스를 정의할 수 있습니다.

docker-compose.yml 예시:
yaml
코드 복사
version: '3'
services:
  web:
    image: my-react-apache-app
    ports:
      - "80:80"
Docker Compose로 서비스 시작:
docker-compose.yml 파일을 프로젝트 루트 디렉토리에 생성합니다.

다음 명령을 사용하여 Docker Compose로 서비스를 시작합니다:

bash
코드 복사
docker-compose up
이렇게 하면 Apache 서버가 Docker 컨테이너 내에서 실행되며, http://localhost로 접속하여 배포된 웹 페이지를 확인할 수 있습니다.

요약
리액트 애플리케이션을 빌드합니다 (npm run build).
Dockerfile을 작성합니다.
(옵션) 커스텀 Apache 설정 파일을 작성합니다.
Docker 이미지를 빌드합니다 (docker build -t my-react-apache-app .).
Docker 컨테이너를 실행합니다 (docker run -p 80:80 my-react-apache-app).
(옵션) Docker Compose를 사용하여 서비스를 관리합니다.