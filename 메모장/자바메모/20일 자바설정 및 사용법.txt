getElementsByClassName
addEnentListener
classList.toggle
nextElementSibling


자바설정
sysout 하고  컨트롤 스페이스하면  System.out.println(); 자동완성
Run as


자바
literal = 소스코드내에서 직접입력된 값;
종류: 정수리터럴, 실수리터럴, 문자리터럴, 문자열리터럴, 논리리터럴
1. 정수리터럴
      - 기본적인 정수리터럴은 10진수로 간주한다.
      -0 으로 시작하는 리터럴(01, 02, 03 ,-04...) 8진수로 간주한다.
      -정수 앞에 0x 시작하는 리터럴 16진수 로 간주한다.
      0x0 ~0xf

      010 ㅡ> 10        1x 8(1)  + 0x 8(0)


2. 실수리터럴
    -소수점이 있는 리터럴은 10진수 실수로 간주한다.
    0.12; 10.0< ㅡ>10  틀림 

    - 대문자 E 또는 소문자 e 가 있는 리터럴은 10진수 지수와 가수로 간주
       5E7 ==> 5 X 10의 7승 
     0.12E-5 ===>  0.12 X 10-5승

    - 실수 리터럴은 float, double 이 있다.


문자 리터럴
      -작은 따옴표로 묶은 하나의 문자
         'A', '한' 
      -역슬레쉬(\)가 붙은 문자 리터럴은 이스케이프 문자라고 한다. (특수 용도 문자)
      "\t' ==> 수평 탭
      "\n' ==> 줄바꿈
      "\r' ==> 리턴
      '\"' ==> 큰따옴표
      '\\' ==> \

     -문자열 지정은 char 타입에만 할 수 있다.
       문자열 리터럴은 쌍따옴표로 묶는다.
   
     논리리터럴은 true , false
class He{
      선언 a
       if{  선언 b }
    method(){}
}



정수타입 	 byte	1byte =8bit 	8bit
	char	2byte		16bit
	shor		
	int	 4byte	
	long	8byte
             float 4byte
 	double 8byte	


1. 문자와 문자열은 다르다. 
    문자열은 큰 따옴표로 만들며 String 타입

   문자는 작은 따옴표로 만들며 기본 타입인 정수 char 타입
    char c = ''; // 컴파일 에러  <불가능
    char c = ' ' //  공백에해당하는 유니코드값 <가능
   
 string str =""; // null<<가능 

1.125 ===> 0.1125 x 10의2

1             2                       1125
1.bit 부호 8bit 에 지수 ===> 23bit 가수    // 가수지수로 나눠서 저장한다

가수 지수 
더블       (자바의실수타입 더블)
1.bit 11bit 52bit

boolean 타입
/////////////////////////////////////////////////////////////


-작은 타입에서 큰 타입으로 ==> 자동타입변환
자동타입변환 : Promotion
강제타입변환 : Casting    ㅡ>  (byte) intValue


byte --> int int --> double
byte val = 10;
int intVal = val

char charVal = 'A'; //65   
int int val= charVal; //65

byte byteVal = 65;  << 에러
char cav = byteVal;  << 에러

byte.MIN_VALUE byte.MAX_VALUE
short.MIN.....
Integer.MIN_VALUE




  


